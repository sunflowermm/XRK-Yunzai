# ========================================
#           服务器配置文件 v2.0
# ========================================
# 本配置文件控制HTTP/HTTPS服务器的行为

# ----------------------------------------
#            基础配置
# ----------------------------------------
server:
  # 服务器名称（将显示在日志中）
  name: "XRK Server"
  
  # 监听地址
  # - 0.0.0.0: 监听所有网络接口（允许外部访问）
  # - 127.0.0.1: 仅监听本地（仅本机可访问）
  host: "0.0.0.0"
  
  # 外部访问URL（可选）
  # 用于生成完整的访问链接，留空则自动检测
  # 示例: https://bot.example.com
  url: ""

# ----------------------------------------
#            HTTPS配置
# ----------------------------------------
https:
  # 是否启用HTTPS服务
  # 注意：启用前请确保已正确配置SSL证书
  enabled: false
  
  # SSL证书配置
  certificate:
    # 私钥文件路径（必需）
    key: "/path/to/privkey.pem"
    
    # 证书文件路径（必需）
    cert: "/path/to/fullchain.pem"
    
    # CA证书链文件路径（可选）
    # 某些证书可能需要提供完整的证书链
    ca: ""
  
  # TLS配置
  tls:
    # 最低TLS版本（建议不低于TLSv1.2）
    minVersion: "TLSv1.2"
    
    # 是否启用HTTP/2协议（提升性能）
    http2: true
  
  # HSTS（HTTP严格传输安全）配置
  # 警告：启用后所有HTTP请求将强制重定向到HTTPS
  hsts:
    enabled: false
    # 有效期（秒），31536000 = 1年
    maxAge: 31536000
    # 是否包含子域名
    includeSubDomains: true
    # 是否允许预加载（需要提交到浏览器预加载列表）
    preload: false

# ----------------------------------------
#            静态文件服务
# ----------------------------------------
static:
  # 默认首页文件列表
  # 按顺序查找，返回第一个存在的文件
  index:
    - "index.html"
    - "index.htm"
    - "default.html"
  
  # 是否允许自动添加扩展名
  # 例如：/page 会尝试 /page.html
  extensions: false
  
  # 缓存时间设置
  cache:
    # 静态资源缓存时间（秒）
    # 86400 = 1天, 604800 = 7天
    static: 86400     # CSS/JS文件
    images: 604800    # 图片文件
  
  # 缓存总时间（适用于其他文件）
  # 支持格式：1d = 1天, 1h = 1小时
  cacheTime: "1d"

# ----------------------------------------
#            安全配置
# ----------------------------------------
security:
  # Helmet安全头配置
  # 自动添加安全相关的HTTP头部
  helmet:
    enabled: true
  
  # HSTS配置（需要HTTPS启用）
  hsts:
    enabled: false
    maxAge: 31536000
    includeSubDomains: true
    preload: false
  
  # 隐藏文件/目录模式
  # 匹配这些模式的文件将返回404
  hiddenFiles:
    - "^\\..*"        # 所有点开头的文件
    - "node_modules"  # Node.js依赖目录
    - "\\.git"        # Git版本控制目录
    - "\\.env"        # 环境变量文件
    - "config/"       # 配置目录
    - "private/"      # 私有目录

# ----------------------------------------
#         跨域资源共享（CORS）
# ----------------------------------------
cors:
  # 是否启用CORS
  enabled: true
  
  # 允许的来源
  # - "*": 允许所有来源（不安全）
  # - 具体域名列表: ["https://example.com"]
  origins: ["*"]
  
  # 允许的HTTP方法
  methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  
  # 允许的请求头
  headers: ["Content-Type", "Authorization", "X-API-Key"]
  
  # 是否允许携带凭证（cookies等）
  credentials: false
  
  # 预检请求缓存时间（秒）
  maxAge: 86400

# ----------------------------------------
#            认证配置
# ----------------------------------------
auth:
  # API密钥配置
  apiKey:
    # 是否启用API密钥认证
    enabled: true
    
    # 密钥存储文件路径
    file: "config/server_config/api_key.json"
    
    # 密钥长度（字符数）
    length: 64
  
  # 无需认证的路径（白名单）
  # 这些路径可以直接访问
  whitelist:
    - "/"              # 根目录
    - "/favicon.ico"   # 网站图标
    - "/health"        # 健康检查
    - "/status"        # 状态接口
    - "/robots.txt"    # 爬虫规则
    - "/xrk"      # 葵崽的API接口测试页面
    # 注意：静态文件默认允许访问

# ----------------------------------------
#            速率限制
# ----------------------------------------
rateLimit:
  # 是否启用速率限制（防止恶意请求）
  enabled: true
  
  # 全局限制（所有请求）
  global:
    windowMs: 900000  # 时间窗口：15分钟
    max: 1000         # 最大请求数
    message: "请求过于频繁，请稍后再试"
  
  # API接口限制（更严格）
  api:
    windowMs: 60000   # 时间窗口：1分钟
    max: 60          # 最大请求数
    message: "API请求过于频繁"

# ----------------------------------------
#            请求限制
# ----------------------------------------
limits:
  # 各种请求体大小限制
  urlencoded: "10mb"  # URL编码数据
  json: "10mb"        # JSON数据
  raw: "50mb"         # 原始数据
  text: "10mb"        # 文本数据
  fileSize: "100mb"   # 文件上传

# ----------------------------------------
#            压缩配置
# ----------------------------------------
compression:
  # 是否启用响应压缩（减少带宽使用）
  enabled: true
  
  # 压缩级别（0-9）
  # 0: 无压缩（最快）
  # 9: 最大压缩（最慢）
  # 推荐：6（平衡）
  level: 6
  
  # 最小压缩大小（字节）
  # 小于此大小的响应不会被压缩
  threshold: 1024

# ----------------------------------------
#            日志配置
# ----------------------------------------
logging:
  # 是否记录请求日志
  requests: true
  
  # 是否记录错误日志
  errors: true
  
  # 是否启用调试日志（详细）
  debug: false
  
  # 避免健康检查等接口刷屏
  quiet:
    - "/health"
    - "/favicon.ico"
    - "/robots.txt"

# ----------------------------------------
#            其他配置
# ----------------------------------------
misc:
  # 是否自动检测公网IP
  # 用于显示外网访问地址
  detectPublicIP: true
  
  # 404时的默认重定向路径
  defaultRoute: "/"